{"version":3,"sources":["assets/logo.svg","hooks/useForm.js","helpers/fetchApi.js","redux/actions/textActions.js","componets/HelloWord.js","App.js","redux/reducer/textReducer.js","redux/reducer/rootReducer.js","redux/store.js","index.js","redux/types/types.js"],"names":["module","exports","useForm","initialState","useState","value","setValue","handleInputChange","target","name","resetInput","baseUrl","process","fetchApi","endPoint","data","method","urlApi","fetch","headers","body","JSON","stringify","types","require","sendText","text","type","textSend","payload","HelloWord","dispatch","useDispatch","textField","useSelector","state","formValue","className","onSubmit","e","preventDefault","a","resp","json","ok","Swal","fire","msg","console","log","StartSendText","placeholder","onChange","role","App","src","logo","alt","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,kC,+MCgB5BC,EAdC,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EACXC,mBAASD,GADE,mBAC9BE,EAD8B,KACvBC,EADuB,KAG/BC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3BF,EAAS,2BAAKD,GAAN,kBAAcG,EAAOC,KAAOD,EAAOH,UAGvCK,EAAa,WACjBJ,EAASH,IAGX,MAAO,CAACE,EAAOE,EAAmBG,I,wBCb9BC,EAAUC,sDAEHC,EAAW,SAACC,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MAC1CC,EAAM,UAAMN,EAAN,YAAiBG,GAE7B,MAAe,QAAXE,EACKE,MAAMD,GAENC,MAAMD,EAAQ,CACnBD,SACAG,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,M,iBCXnBQ,EAAUC,EAAQ,GAAlBD,MAEFE,EAAW,SAACC,GAChB,MAAO,CACLC,KAAMJ,EAAMK,SACZC,QAASH,I,OCiDEI,EAnDG,WAChB,IAAMC,EAAWC,cACTC,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMT,QAA3CO,UAFc,EAG6B/B,EAAQ,CACzDwB,KAAM,KAJc,mBAGfU,EAHe,KAGJ7B,EAHI,KAGeG,EAHf,KAMdgB,EAASU,EAATV,KAOR,OACE,yBAAKW,UAAU,6BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,+CACA,0BAAMC,SAVO,SAACC,GACpBA,EAAEC,iBACFT,EDHyB,SAACL,GAC5B,8CAAO,WAAOK,GAAP,mBAAAU,EAAA,+EAEgB5B,EAAS,SAAUa,EAAM,QAFzC,cAEGgB,EAFH,gBAGgBA,EAAKC,OAHrB,OAGGvB,EAHH,OAIKL,EAAaK,EAAbL,KAAaK,EAAPwB,GAEZb,EAASN,EAASV,EAAKW,OAEvBmB,IAAKC,KAAK,SAAU1B,EAAK2B,IAAK,SAR7B,kDAWHC,QAAQC,IAAR,MAXG,0DAAP,sDCEWC,CAAcd,IACvB1B,MAQQ,yBAAK2B,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,eACVc,YAAY,YACZ1C,KAAK,OACLJ,MAAOqB,EACP0B,SAAU7C,KAGd,yBAAK8B,UAAU,cACb,2BACEV,KAAK,SACLU,UAAU,4BACVhC,MAAM,YAKd,yBAAKgC,UAAU,yBACb,6CACCJ,GACC,yBAAKI,UAAU,sBAAsBgB,KAAK,SACvCpB,OC/BAqB,MAXf,WACE,OACE,yBAAKjB,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKkB,IAAKC,IAAMnB,UAAU,WAAWoB,IAAI,SACzC,kBAAC,EAAD,S,sBCRFtD,EAAe,CACnB8B,UAAW,ICAAyB,EAAcC,YAAgB,CACzCjC,KDEyB,WAA8C,IAA7CS,EAA4C,uDAApChC,EAAoC,yCAApBwB,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QACxD,OAAQF,GACN,KAAKJ,QAAMK,SACT,OAAO,2BACFO,GADL,IAEEF,UAAWJ,IAEf,QACE,OAAOM,MERPyB,EACe,qBAAXC,QACNA,OAAOC,sCACTC,IAEWC,EAAQC,YACnBP,EACAE,EAAiBM,YAAgBC,OCLnCC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,U,+BCZ1B,6CAAO,IAAMhD,EAAQ,CACnBK,SAAU,sB","file":"static/js/main.7b68262b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { useState } from 'react';\n\nconst useForm = (initialState = {}) => {\n  const [value, setValue] = useState(initialState);\n\n  const handleInputChange = ({ target }) => {\n    setValue({ ...value, [target.name]: target.value });\n  };\n\n  const resetInput = () => {\n    setValue(initialState);\n  };\n\n  return [value, handleInputChange, resetInput];\n};\n\nexport default useForm;\n","const baseUrl = process.env.REACT_APP_API_URL;\n\nexport const fetchApi = (endPoint, data, method = 'GET') => {\n  const urlApi = `${baseUrl}/${endPoint}`;\n\n  if (method === 'GET') {\n    return fetch(urlApi);\n  } else {\n    return fetch(urlApi, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n","import { fetchApi } from '../../helpers/fetchApi';\nimport Swal from 'sweetalert2';\nconst { types } = require('../types/types');\n\nconst sendText = (text) => {\n  return {\n    type: types.textSend,\n    payload: text,\n  };\n};\n\n// Actions Asyns\nexport const StartSendText = (text) => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchApi('hellow', text, 'POST');\n      const body = await resp.json();\n      const { data, ok } = body;\n      if (ok) {\n        dispatch(sendText(data.text));\n      } else {\n        Swal.fire('Error!', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","import React from 'react';\nimport useForm from '../hooks/useForm';\nimport { StartSendText } from '../redux/actions/textActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst HelloWord = () => {\n  const dispatch = useDispatch();\n  const { textField } = useSelector((state) => state.text);\n  const [formValue, handleInputChange, resetInput] = useForm({\n    text: '',\n  });\n  const { text } = formValue;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(StartSendText(formValue));\n    resetInput();\n  };\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Prueba Tecnica:</h3>\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Send Text\"\n                name=\"text\"\n                value={text}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"submit\"\n                className=\"btnSubmit btn btn-primary\"\n                value=\"Send\"\n              />\n            </div>\n          </form>\n        </div>\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Response API:</h3>\n          {textField && (\n            <div className=\"alert alert-success\" role=\"alert\">\n              {textField}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HelloWord;\n","import React from 'react';\nimport logo from './assets/logo.svg';\nimport './assets/App.css';\nimport HelloWord from './componets/HelloWord';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <HelloWord />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { types } from '../types/types';\n\nconst initialState = {\n  textField: '',\n};\n\nexport const textReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case types.textSend:\n      return {\n        ...state,\n        textField: payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { textReducer } from './textReducer';\n\nexport const rootReducer = combineReducers({\n  text: textReducer,\n  // Add more reducer\n});\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from './reducer/rootReducer';\n\n// Config develepor tools redux\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","export const types = {\n  textSend: '[Text] send Text',\n};\n"],"sourceRoot":""}